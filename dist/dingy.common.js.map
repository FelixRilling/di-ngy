{"version":3,"file":"dingy.common.js","sources":["esm/src/config/config.default.js","esm/src/di.js","esm/src/fileStreamAppender.js","esm/src/logger.js","esm/src/message/createSlimMessage.js","esm/src/command/core/echo.js","esm/src/command/core/help.js","esm/src/command/core/stop.js","esm/src/command/commands.default.js","esm/src/role/hasEnoughPower.js","esm/src/message/MessageSenderService.js","../node_modules/cli-ngy/dist/esm/src/lookup/result/LookupResult.js","esm/src/message/MessageReceiverService.js","esm/src/storage/JSONStorage.js","esm/src/storage/MemoryStorage.js","esm/src/Dingy.js","esm/src/util/toFullName.js","esm/src/util/stripBotData.js"],"sourcesContent":["/**\n * Default role for every user.\n *\n * @public\n */\nconst DEFAULT_ROLE = {\n    power: 0,\n    check: () => true\n};\n/**\n * Default config settings.\n *\n * @private\n */\nconst DEFAULT_CONFIG = {\n    prefix: \"$\",\n    roles: [DEFAULT_ROLE],\n    enableDefaultCommands: true,\n    answerToMissingCommand: false,\n    answerToMissingArgs: true,\n    answerToMissingPerms: true,\n    strings: {\n        error: {\n            notFound: \"The command was not found: \",\n            missingArgs: \"Missing required argument(s): \",\n            noPermission: \"You do not have the permissions to use this command.\",\n            invalidDMCall: \"This command cannot be used in DMs.\"\n        },\n        response: {\n            empty: \"Empty response.\",\n            tooLong: \"The output was too long to send.\"\n        },\n        separator: \"-\".repeat(9)\n    },\n    clingy: {\n        caseSensitive: false,\n        legalQuotes: ['\"']\n    }\n};\nexport { DEFAULT_CONFIG, DEFAULT_ROLE };\n//# sourceMappingURL=config.default.js.map","import { Chevron } from \"chevronjs\";\n/**\n * Dingy chevron instance.\n *\n * @public\n */\nconst dingyChevron = new Chevron();\nvar DingyDiKeys;\n(function (DingyDiKeys) {\n    DingyDiKeys[\"CLASS\"] = \"_DINGY\";\n    DingyDiKeys[\"COMMANDS\"] = \"_DINGY_COMMANDS\";\n})(DingyDiKeys || (DingyDiKeys = {}));\nexport { dingyChevron, DingyDiKeys };\n//# sourceMappingURL=di.js.map","import { createWriteStream, ensureFile } from \"fs-extra\";\nimport { isObject } from \"lightdash\";\nimport { createDefaultLogPrefix } from \"logby\";\n/**\n * Helper method converting an array of arbitrary values to a string which can be logged.\n *\n * @private\n * @param args Arguments to stringify.\n * @returns String containing stringified arguments.\n */\nconst stringifyArgs = (args) => args\n    .map(val => {\n    if (isObject(val)) {\n        return JSON.stringify(val);\n    }\n    return val;\n})\n    .join(\" \");\n/**\n * Logby appender streaming the output to a file on the disk.\n *\n * @private\n * @param path Path to use for the file, will be created if it does not exist.\n * @returns File stream appender.\n */\nconst createFileStreamAppender = async (path) => {\n    await ensureFile(path);\n    const writeStream = createWriteStream(path); //TODO find a way to properly close the stream on shutdown\n    return (name, level, args) => {\n        writeStream.write(`${createDefaultLogPrefix(name, level)} - ${stringifyArgs(args)}\\n`);\n    };\n};\nexport { createFileStreamAppender };\n//# sourceMappingURL=fileStreamAppender.js.map","import { clingyLogby } from \"cli-ngy\";\nimport { createDelegatingAppender, defaultLoggingAppender, Logby } from \"logby\";\nimport { createFileStreamAppender } from \"./fileStreamAppender\";\nconst logFilePath = `./log/bot_${Date.now()}.log`;\n/**\n * Logby instance used by Di-ngy.\n *\n * @public\n */\nconst dingyLogby = new Logby();\ncreateFileStreamAppender(logFilePath)\n    .then(fileStreamAppender => dingyLogby.appenders.add(fileStreamAppender))\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    .catch(console.error);\nclingyLogby.appenders.add(createDelegatingAppender(dingyLogby));\nclingyLogby.appenders.delete(defaultLoggingAppender);\nexport { dingyLogby };\n//# sourceMappingURL=logger.js.map","/**\n * Helper function which creates a slim, printable version of a message.\n *\n * @private\n */\nconst createSlimMessage = (msg) => {\n    return {\n        author: { username: msg.author.username, id: msg.author.id },\n        content: msg.content\n    };\n};\nexport { createSlimMessage };\n//# sourceMappingURL=createSlimMessage.js.map","/**\n * Built-in \"echo\" command.\n *\n * @private\n */\nconst echo = {\n    alias: [\"say\", \"send\"],\n    args: [\n        {\n            name: \"val\",\n            required: true\n        }\n    ],\n    sub: null,\n    data: {\n        powerRequired: 8,\n        hidden: true,\n        usableInDMs: true,\n        help: \"Echoes a text.\"\n    },\n    fn: (args) => args.get(\"val\")\n};\nexport { echo };\n//# sourceMappingURL=echo.js.map","import { stringify } from \"yamljs\";\n/**\n * @private\n */\nconst createSlimCommand = (command, showDetails = false) => {\n    const result = {\n        desc: command.data.help\n    };\n    if (showDetails) {\n        result.powerRequired = command.data.powerRequired;\n        result.usableInDMs = command.data.usableInDMs;\n        if (command.args.length > 0) {\n            result.args = command.args;\n        }\n        if (command.alias.length > 0) {\n            result.alias = command.alias;\n        }\n    }\n    if (command.sub != null) {\n        result.sub = Array.from(command.sub.map.keys());\n    }\n    return result;\n};\n/**\n * @private\n */\nconst createSlimCommandTree = (map) => {\n    const result = {};\n    map.forEach((command, key) => {\n        if (!command.data.hidden) {\n            result[key] = createSlimCommand(command);\n        }\n    });\n    return result;\n};\n/**\n * @private\n */\nconst showDetailHelp = (dingy, clingy, argsAll) => {\n    const lookupResult = clingy.getPath(argsAll);\n    // Prematurely assume success to combine hidden + success check.\n    const command = lookupResult.command;\n    if (!lookupResult.successful || command.data.hidden) {\n        return {\n            val: `Command '${argsAll.join(\"->\")}' does not exist.`,\n            code: true\n        };\n    }\n    return {\n        val: [\n            `Help: '${lookupResult.pathUsed.join(\"->\")}'`,\n            dingy.config.strings.separator,\n            stringify(createSlimCommand(command, true))\n        ].join(\"\\n\"),\n        code: \"yaml\"\n    };\n};\n/**\n * @private\n */\nconst showGeneralHelp = (dingy, clingy) => {\n    return {\n        val: [\n            \"Help\",\n            dingy.config.strings.separator,\n            stringify(createSlimCommandTree(clingy.map))\n        ].join(\"\\n\"),\n        code: \"yaml\"\n    };\n};\n/**\n * Built-in \"help\" command.\n *\n * @private\n */\nconst help = {\n    alias: [\"manual\", \"?\"],\n    args: [],\n    sub: null,\n    data: {\n        powerRequired: 0,\n        hidden: false,\n        usableInDMs: true,\n        help: \"Shows the help page.\"\n    },\n    fn: (args, argsAll, msg, dingy, clingy) => argsAll.length > 0\n        ? showDetailHelp(dingy, clingy, argsAll)\n        : showGeneralHelp(dingy, clingy)\n};\nexport { help };\n//# sourceMappingURL=help.js.map","const EXIT_CODE_STOP = 10;\n/**\n * Built-in \"stop\" command.\n *\n * @private\n */\nconst stop = {\n    alias: [\"die\", \"shutdown\"],\n    args: [],\n    sub: null,\n    data: {\n        powerRequired: 10,\n        hidden: true,\n        usableInDMs: true,\n        help: \"Stops the bot.\"\n    },\n    fn: (args, argsAll, msg, dingy) => {\n        dingy.client.setTimeout(async () => {\n            await dingy.disconnect();\n            process.exit(EXIT_CODE_STOP);\n        }, 1000);\n        return \"Stopping...\";\n    }\n};\nexport { stop };\n//# sourceMappingURL=stop.js.map","import { echo } from \"./core/echo\";\nimport { help } from \"./core/help\";\nimport { stop } from \"./core/stop\";\n/**\n * Default commands.\n *\n * @private\n */\nconst DEFAULT_COMMANDS = {\n    echo,\n    stop,\n    help\n};\nexport { DEFAULT_COMMANDS };\n//# sourceMappingURL=commands.default.js.map","/**\n * Helper function checking role access.\n *\n * @private\n */\nconst hasEnoughPower = (msg, powerRequired, roles) => {\n    for (const role of roles) {\n        if (role.power >= powerRequired && role.check(msg)) {\n            return true;\n        }\n    }\n    return false;\n};\nexport { hasEnoughPower };\n//# sourceMappingURL=hasEnoughPower.js.map","import { InjectableType } from \"chevronjs\";\nimport { isNil, isPromise, isString } from \"lightdash\";\nimport { dingyChevron, DingyDiKeys } from \"../di\";\nimport { dingyLogby } from \"../logger\";\n/**\n * Handles sending messages.\n *\n * @private\n */\nclass MessageSenderService {\n    constructor(dingy) {\n        this.dingy = dingy;\n    }\n    /**\n     * Sends a result as response.\n     *\n     * @param msg Message to respond to.\n     * @param value Value to send.\n     */\n    sendResult(msg, value) {\n        if (isPromise(value)) {\n            MessageSenderService.logger.debug(\"Value is a promise, waiting.\");\n            value\n                .then(valueResolved => this.send(msg, valueResolved))\n                .catch(err => MessageSenderService.logger.error(\"Error while waiting for resolve: \", err));\n        }\n        else {\n            this.send(msg, value);\n        }\n    }\n    send(msg, value) {\n        MessageSenderService.logger.trace(\"Preparing sending of message.\", {\n            value\n        });\n        const isPlainValue = isString(value);\n        const options = {\n            code: isPlainValue ? false : value.code,\n            files: isPlainValue ? [] : value.files\n        };\n        const content = this.determineContent(value, isPlainValue);\n        MessageSenderService.logger.debug(\"Sending message.\", {\n            content,\n            options\n        });\n        msg.channel\n            .send(content, options)\n            .then(sentMsg => {\n            if (!isPlainValue && !isNil(value.onSend)) {\n                value.onSend(sentMsg);\n            }\n            MessageSenderService.logger.debug(\"Sent message.\", {\n                content,\n                options\n            });\n        })\n            .catch(err => MessageSenderService.logger.error(\"Could not send message.\", err));\n    }\n    determineContent(value, isPlainValue) {\n        const content = isPlainValue\n            ? value\n            : value.val;\n        if (content.length > MessageSenderService.MAX_LENGTH) {\n            MessageSenderService.logger.warn(\"Message is too long to send:\", content);\n            return this.dingy.config.strings.response.tooLong;\n        }\n        if (content.length === 0) {\n            MessageSenderService.logger.warn(\"Message is empty.\");\n            return this.dingy.config.strings.response.empty;\n        }\n        return content;\n    }\n}\nMessageSenderService.logger = dingyLogby.getLogger(MessageSenderService);\nMessageSenderService.MAX_LENGTH = 2000;\ndingyChevron.set(InjectableType.FACTORY, [DingyDiKeys.CLASS], MessageSenderService);\nexport { MessageSenderService };\n//# sourceMappingURL=MessageSenderService.js.map","var ResultType;\n(function (ResultType) {\n    ResultType[ResultType[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ResultType[ResultType[\"ERROR_NOT_FOUND\"] = 1] = \"ERROR_NOT_FOUND\";\n    ResultType[ResultType[\"ERROR_MISSING_ARGUMENT\"] = 2] = \"ERROR_MISSING_ARGUMENT\";\n})(ResultType || (ResultType = {}));\nexport { ResultType };\n//# sourceMappingURL=LookupResult.js.map","import { InjectableType } from \"chevronjs\";\nimport { Clingy } from \"cli-ngy\";\nimport { DMChannel } from \"discord.js\";\nimport { isInstanceOf, isRegExp, objDefaultsDeep } from \"lightdash\";\nimport { DEFAULT_COMMANDS } from \"../command/commands.default\";\nimport { dingyChevron, DingyDiKeys } from \"../di\";\nimport { dingyLogby } from \"../logger\";\nimport { hasEnoughPower } from \"../role/hasEnoughPower\";\nimport { createSlimMessage } from \"./createSlimMessage\";\nimport { MessageSenderService } from \"./MessageSenderService\";\nimport { ResultType } from \"cli-ngy/dist/esm/src/lookup/result/LookupResult\";\n/**\n * Handles resolving messages.\n *\n * @private\n */\nclass MessageReceiverService {\n    /**\n     * Creates a new MessageReceiverService\n     *\n     * @param dingy Dingy instance this service belongs to.\n     * @param commands Command object.\n     */\n    constructor(dingy, commands) {\n        this.dingy = dingy;\n        this.clingy = new Clingy(dingy.config.enableDefaultCommands\n            ? objDefaultsDeep(commands, DEFAULT_COMMANDS)\n            : commands, this.dingy.config.clingy);\n        this.messageSenderService = new MessageSenderService(dingy);\n    }\n    static matchesPrefix(content, prefix) {\n        return isRegExp(prefix)\n            ? prefix.test(content)\n            : content.startsWith(prefix) && content !== prefix;\n    }\n    static getContentWithoutPrefix(content, prefix) {\n        return isRegExp(prefix)\n            ? content.replace(prefix, \"\")\n            : content.substr(prefix.length);\n    }\n    /**\n     * Handle an incoming message.\n     *\n     * @param msg Discord message to process.\n     */\n    handleMessage(msg) {\n        if (msg.system && msg.author.bot) {\n            MessageReceiverService.logger.trace(\"Message is from the system or a bot, will be skipped.\", createSlimMessage(msg));\n            return;\n        }\n        if (!MessageReceiverService.matchesPrefix(msg.content, this.dingy.config.prefix)) {\n            MessageReceiverService.logger.trace(\"Message does not match prefix, will be skipped.\", createSlimMessage(msg));\n            return;\n        }\n        const msgContent = MessageReceiverService.getContentWithoutPrefix(msg.content, this.dingy.config.prefix);\n        MessageReceiverService.logger.debug(\"Parsing content.\", createSlimMessage(msg));\n        const lookupResult = this.clingy.parse(msgContent);\n        MessageReceiverService.logger.trace(\"Parsed content.\", lookupResult);\n        if (lookupResult.type === ResultType.ERROR_NOT_FOUND) {\n            const lookupResultNotFound = lookupResult;\n            MessageReceiverService.logger.debug(`Command not found: ${lookupResultNotFound.missing}.`);\n            this.handleLookupNotFound(msg, lookupResultNotFound);\n        }\n        else if (lookupResult.type === ResultType.ERROR_MISSING_ARGUMENT) {\n            const lookupResultMissingArg = lookupResult;\n            MessageReceiverService.logger.debug(`Argument missing: ${lookupResultMissingArg.missing}.`);\n            this.handleLookupMissingArg(msg, lookupResultMissingArg);\n        }\n        else if (lookupResult.type === ResultType.SUCCESS) {\n            const lookupResultSuccess = lookupResult;\n            MessageReceiverService.logger.trace(\"Lookup successful.\", lookupResultSuccess);\n            this.handleLookupSuccess(msg, lookupResultSuccess);\n        }\n        else {\n            MessageReceiverService.logger.error(\"Every check failed, this should never happen.\", lookupResult);\n        }\n    }\n    handleLookupNotFound(msg, lookupResultNotFound) {\n        if (this.dingy.config.answerToMissingCommand) {\n            MessageReceiverService.logger.debug(\"Answering to command not found.\");\n            this.messageSenderService.sendResult(msg, this.dingy.config.strings.error.notFound +\n                lookupResultNotFound.missing);\n        }\n    }\n    handleLookupMissingArg(msg, lookupResultMissingArg) {\n        if (this.dingy.config.answerToMissingArgs) {\n            MessageReceiverService.logger.debug(\"Answering to missing arg.\");\n            this.messageSenderService.sendResult(msg, this.dingy.config.strings.error.missingArgs +\n                lookupResultMissingArg.missing\n                    .map(arg => arg.name)\n                    .join(\", \"));\n        }\n    }\n    handleLookupSuccess(msg, lookupResultSuccess) {\n        const command = lookupResultSuccess.command;\n        if (isInstanceOf(msg.channel, DMChannel) && !command.data.usableInDMs) {\n            MessageReceiverService.logger.debug(\"Not usable in DMs.\");\n            this.messageSenderService.sendResult(msg, this.dingy.config.strings.error.invalidDMCall);\n            return;\n        }\n        if (!hasEnoughPower(msg, command.data.powerRequired, this.dingy.config.roles)) {\n            MessageReceiverService.logger.debug(\"No permissions.\");\n            this.messageSenderService.sendResult(msg, this.dingy.config.strings.error.noPermission);\n            return;\n        }\n        MessageReceiverService.logger.debug(\"Running command:\", command);\n        const result = command.fn(lookupResultSuccess.args, lookupResultSuccess.pathDangling, msg, this.dingy, this.clingy);\n        MessageReceiverService.logger.trace(\"Command returned:\", { result });\n        if (result == null) {\n            MessageReceiverService.logger.trace(\"Skipping response.\");\n            return;\n        }\n        MessageReceiverService.logger.debug(\"Answering to successful command.\", {\n            result\n        });\n        this.messageSenderService.sendResult(msg, result);\n    }\n}\nMessageReceiverService.logger = dingyLogby.getLogger(MessageReceiverService);\ndingyChevron.set(InjectableType.FACTORY, [DingyDiKeys.CLASS, DingyDiKeys.COMMANDS], MessageReceiverService);\nexport { MessageReceiverService };\n//# sourceMappingURL=MessageReceiverService.js.map","import { pathExists, readJson, writeJson } from \"fs-extra\";\nimport { isNil } from \"lightdash\";\nimport { dingyLogby } from \"../logger\";\nconst SAVE_INTERVAL_MS = 60 * 1000; // 1min\n/**\n * IInitializableStorage implementation using JSON files to store data.\n *\n * @private\n */\nclass JSONStorage {\n    constructor(path) {\n        this.dirty = false;\n        this.saveInterval = null;\n        this.data = {};\n        this.path = path;\n    }\n    async init() {\n        const exists = await pathExists(this.path);\n        if (exists) {\n            JSONStorage.logger.trace(`JSON '${this.path}' exists, loading it.`);\n            this.data = await readJson(this.path);\n        }\n        else {\n            JSONStorage.logger.trace(`JSON '${this.path}' does not exist, loading it.`);\n            await writeJson(this.path, this.data);\n        }\n        this.saveInterval = setInterval(() => this.save(), SAVE_INTERVAL_MS);\n    }\n    set(key, val) {\n        this.data[key] = val;\n        this.dirty = true;\n    }\n    get(key) {\n        return this.data[key];\n    }\n    has(key) {\n        return !isNil(this.data[key]);\n    }\n    save() {\n        if (!this.dirty) {\n            JSONStorage.logger.trace(\"JSON was not changed, not saving it.\");\n        }\n        else {\n            JSONStorage.logger.trace(\"JSON was changed, attempting to save it.\");\n            this.dirty = false;\n            // We don't need to wait for the saving to finish\n            // This *could* lead to locking/access issues but hey, probably works.\n            writeJson(this.path, this.data)\n                .then(() => JSONStorage.logger.trace(`Saved JSON '${this.path}'.`))\n                .catch(e => JSONStorage.logger.error(`Could not save JSON '${this.path}'.`, e));\n        }\n    }\n}\nJSONStorage.logger = dingyLogby.getLogger(JSONStorage);\nexport { JSONStorage };\n//# sourceMappingURL=JSONStorage.js.map","/**\n * IStorage implementation using a simple map to store data.\n *\n * @private\n */\nclass MemoryStorage {\n    constructor() {\n        this.data = new Map();\n    }\n    set(key, val) {\n        this.data.set(key, val);\n    }\n    get(key) {\n        return this.data.get(key);\n    }\n    has(key) {\n        return this.data.has(key);\n    }\n}\nexport { MemoryStorage };\n//# sourceMappingURL=MemoryStorage.js.map","import { InjectableType } from \"chevronjs\";\nimport { Client } from \"discord.js\";\nimport { isNil, objDefaultsDeep } from \"lightdash\";\nimport * as path from \"path\";\nimport { DEFAULT_CONFIG } from \"./config/config.default\";\nimport { dingyChevron, DingyDiKeys } from \"./di\";\nimport { dingyLogby } from \"./logger\";\nimport { createSlimMessage } from \"./message/createSlimMessage\";\nimport { MessageReceiverService } from \"./message/MessageReceiverService\";\nimport { JSONStorage } from \"./storage/JSONStorage\";\nimport { MemoryStorage } from \"./storage/MemoryStorage\";\n/**\n * Main Dingy class.\n *\n * @public\n */\nclass Dingy {\n    /**\n     * Creates a new Dingy instance.\n     *\n     * @param {object} commands Object containing commands for the bot to use.\n     * @param {object?} config Config object.\n     * @param {object?} memoryStorage Storage instance handling runtime data. Falls back to {@link MemoryStorage}.\n     * @param {object?} persistentStorage Storage instance handling persistent data; Falls back to {@link JSONStorage}.\n     */\n    constructor(commands, config = {}, memoryStorage, persistentStorage) {\n        Dingy.logger.info(\"Creating instance.\");\n        Dingy.logger.debug(\"Applying config.\");\n        this.config = objDefaultsDeep(config, DEFAULT_CONFIG);\n        Dingy.logger.info(\"Initializing Storage.\");\n        Dingy.logger.debug(\"Creating memory storage.\");\n        this.memoryStorage = isNil(memoryStorage)\n            ? new MemoryStorage()\n            : memoryStorage;\n        Dingy.logger.debug(\"Creating persistent storage.\");\n        this.persistentStorage = isNil(persistentStorage)\n            ? new JSONStorage(path.join(\"./\", Dingy.DATA_DIRECTORY, \"storage.json\"))\n            : persistentStorage;\n        Dingy.logger.debug(\"Initializing DI.\");\n        dingyChevron.set(InjectableType.PLAIN, [], this, DingyDiKeys.CLASS);\n        dingyChevron.set(InjectableType.PLAIN, [], commands, DingyDiKeys.COMMANDS);\n        Dingy.logger.debug(\"Creating MessageReceiverService.\");\n        this.messageReceiverService = dingyChevron.get(MessageReceiverService);\n        Dingy.logger.info(\"Creating Client.\");\n        this.client = new Client();\n        Dingy.logger.debug(\"Binding events.\");\n        this.bindEvents();\n        Dingy.logger.info(\"Created instance.\");\n    }\n    /**\n     * Connects the instance to the Discord API.\n     *\n     * @param {string} token API token.\n     */\n    async connect(token) {\n        Dingy.logger.debug(\"Initializing persistent storage.\");\n        try {\n            await this.persistentStorage.init();\n        }\n        catch (e) {\n            const err = e;\n            Dingy.logger.error(\"Could not init persistent storage: \", err);\n            throw err;\n        }\n        Dingy.logger.info(\"Connecting to the Discord API.\");\n        try {\n            await this.client.login(token);\n        }\n        catch (e) {\n            const err = e;\n            Dingy.logger.error(\"Could not connect to the Discord API.\", err);\n            throw err;\n        }\n        Dingy.logger.info(\"Connected.\");\n    }\n    /**\n     * Disconnects the instance from the Discord API.\n     */\n    async disconnect() {\n        Dingy.logger.info(\"Disconnecting from the Discord API.\");\n        try {\n            await this.client.destroy();\n        }\n        catch (e) {\n            const err = e;\n            Dingy.logger.error(\"Could not disconnect from the Discord API.\", err);\n            throw err;\n        }\n        Dingy.logger.info(\"Disconnected.\");\n    }\n    bindEvents() {\n        this.client.on(\"error\", err => Dingy.logger.error(\"An error occurred, trying to continue.\", err));\n        this.client.on(\"message\", msg => this.messageHandler(msg));\n    }\n    messageHandler(msg) {\n        Dingy.logger.trace(\"A message was sent.\", createSlimMessage(msg));\n        this.messageReceiverService.handleMessage(msg);\n    }\n}\nDingy.logger = dingyLogby.getLogger(Dingy);\nDingy.DATA_DIRECTORY = \"data\";\nexport { Dingy };\n//# sourceMappingURL=Dingy.js.map","/**\n * Creates a displayable string of an user.\n *\n * @private\n * @param {User} user\n * @returns {string}\n */\nconst toFullName = (user) => `${user.username}#${user.discriminator}`;\nexport { toFullName };\n//# sourceMappingURL=toFullName.js.map","import { isBoolean, isFunction, isNil, isNumber, isObject, isString, objDecycle } from \"lightdash\";\nconst BLOCKED_KEYS = /_\\w+|\\$\\w+|client|guild|lastMessage|token/;\n/**\n * Checks if a value is to be kept in a filter iterator\n *\n * @private\n * @param {any} value\n * @returns {boolean}\n */\nconst isLegalValue = (value) => !isNil(value) && !isFunction(value);\n/**\n * Checks if a entry is to be kept in a filter iterator\n *\n * @private\n * @param {Array<any>} entry\n * @returns {boolean}\n */\nconst isLegalEntry = (entry) => !BLOCKED_KEYS.test(entry[0]) && isLegalValue(entry[1]);\n/**\n * Recursively strips sensitive data.\n *\n * @private\n * @param {any} val\n * @returns {any}\n */\nconst strip = (val) => {\n    if (isString(val) || isNumber(val) || isBoolean(val)) {\n        return val;\n    }\n    else if (Array.isArray(val)) {\n        return val.filter(isLegalValue).map(strip);\n    }\n    else if (isObject(val)) {\n        const result = {};\n        Object.entries(val)\n            .filter(isLegalEntry)\n            .forEach(entry => {\n            result[entry[0]] = strip(entry[1]);\n        });\n        return result;\n    }\n    return null;\n};\n/**\n * Decycles and recursively strips sensitive data.\n *\n * @private\n * @param {any} val\n * @returns {any}\n */\nconst stripBotData = (val) => strip(objDecycle(val));\nexport { stripBotData };\n//# sourceMappingURL=stripBotData.js.map"],"names":["Chevron","isObject","ensureFile","createWriteStream","createDefaultLogPrefix","Logby","clingyLogby","createDelegatingAppender","defaultLoggingAppender","stringify","isPromise","isString","isNil","InjectableType","Clingy","objDefaultsDeep","isRegExp","isInstanceOf","DMChannel","pathExists","readJson","writeJson","path.join","Client","isFunction","isNumber","isBoolean","objDecycle"],"mappings":"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"}